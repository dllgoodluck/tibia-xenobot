<panel name="Self Healer">
	<control name="SpellList">
		<item spell="Exura Vita" mana="160" vcomp="0" vsign="1" vrandom="0" vvalue="50" enabled="1"/>
		<item spell="Exura Gran" mana="70" vcomp="0" vsign="1" vrandom="0" vvalue="85" enabled="1"/>
		<item spell="Exura" mana="20" vcomp="0" vsign="1" vrandom="0" vvalue="85" enabled="1"/>
	</control>
	<control name="ItemList">
		<item id="3153" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="3200" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="3160" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="3197" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="3158" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="3148" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="3155" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="3198" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="3202" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="3175" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="3191" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="3161" vcomp="0" vsign="0" vrandom="0" vvalue="0" enabled="0"/>
		<item id="238" vcomp="0" vsign="3" vrandom="0" vvalue="30" enabled="1"/>
	</control>
</panel>
<panel name="Frag Helper">
	<control name="HoldTarg" value="1"/>
	<control name="ComboEnable" value="0"/>
</panel>
<panel name="Tools">
	<control name="LightEnable" value="0"/>
	<control name="XRayEnable" value="0"/>
	<control name="ShowLookIDs" value="1"/>
	<control name="ShowManaBar" value="0"/>
	<control name="ShowBPInfo" value="1"/>
	<control name="EnableAntiIdle" value="0"/>
	<control name="EnableEatFood" value="1"/>
	<control name="EnableAdvancedInfo" value="0"/>
</panel>
<panel name="Combo Options">
	<control name="ComboSayLeader" value=""/>
	<control name="ComboSayPhrase" value=""/>
	<control name="ComboSayEnable" value="0"/>
	<control name="ComboShotLeader" value=""/>
	<control name="ComboShotType" value="0"/>
	<control name="ComboShotEnable" value="0"/>
	<control name="ComboExivaLeader" value=""/>
	<control name="ComboExivaEnable" value="0"/>
	<control name="ComboParaWatch" value="0"/>
	<control name="ComboParaEnable" value="0"/>
	<control name="ComboPartyWatch" value="0"/>
	<control name="ComboPartyEnable" value="0"/>
	<control name="ComboAttackSpell" value="Exevo Gran Mas Frigo"/>
	<control name="ComboAttackSpellEnable" value="0"/>
	<control name="ComboAttackRuneID" value="3155"/>
	<control name="ComboAttackRuneEnable" value="0"/>
	<control name="ComboFocusType" value="0"/>
</panel>
<panel name="HUD">
	<control name="HUDItemList">
		<item textColor="9" x="5" y="5" pos="4" checked="0"/>
		<item textColor="8" x="5" y="5" pos="6" checked="0"/>
		<item textColor="7" x="5" y="5" pos="0" checked="0"/>
		<item textColor="6" x="5" y="5" pos="8" checked="0"/>
		<item textColor="4" x="5" y="5" pos="10" checked="0"/>
		<item textColor="13" x="5" y="5" pos="0" checked="0"/>
		<item textColor="13" x="5" y="5" pos="2" checked="0"/>
		<item textColor="0" x="0" y="0" pos="0" checked="0"/>
	</control>
	<control name="HPPercOnClick" value="0"/>
	<control name="MPPercOnClick" value="0"/>
	<control name="MPPercClickEnable" value="0"/>
	<control name="MPPercClickEnable" value="0"/>
</panel>
<panel name="Recent Loot">
	<control name="LootMonsterList">
	</control>
	<control name="DisplaySelectLoot" value="0"/>
	<control name="HideNothingLoot" value="0"/>
</panel>
<panel name="Spell Timers">
	<control name="ShowHasteTimer" value="1"/>
	<control name="ShowManaTimer" value="1"/>
	<control name="ShowInvisibleTimer" value="1"/>
	<control name="ShowBuffTimers" value="1"/>
</panel>
<panel name="Kill Counters">
	<control name="KillCounterBox">
	</control>
	<control name="DisplaySelectCounters" value="0"/>
	<control name="DisplayCountRatios" value="0"/>
</panel>
<panel name="Battle Information">
	<control name="ShowTakenDamage" value="1"/>
	<control name="ShowDealtDamage" value="1"/>
	<control name="ShowTarget" value="1"/>
	<control name="ShowFollow" value="1"/>
	<control name="ShowExiva" value="1"/>
</panel>
<panel name="Experience Information">
	<control name="ShowHourlyExp" value="1"/>
	<control name="ShowExpTogo" value="1"/>
	<control name="ShowTimeLeft" value="1"/>
</panel>
<panel name="Condition Manager">
	<control name="PoisonCureLimit" value="6"/>
	<control name="PoisonCureMana" value="20"/>
	<control name="PoisonCureEnable" value="0"/>
	<control name="DeathCureLimit" value="10"/>
	<control name="DeathCureMana" value="40"/>
	<control name="DeathCureEnable" value="0"/>
	<control name="PhysicalCureLimit" value="5"/>
	<control name="PhysicalCureMana" value="30"/>
	<control name="PhysicalCureEnable" value="0"/>
	<control name="FireCureLimit" value="20"/>
	<control name="FireCureMana" value="30"/>
	<control name="FireCureEnable" value="0"/>
	<control name="EnergyCureLimit" value="15"/>
	<control name="EnergyCureMana" value="30"/>
	<control name="EnergyCureEnable" value="0"/>
	<control name="ParaCureEnable" value="1"/>
	<control name="ParaCureMana" value="160"/>
	<control name="ParaCureSpell" value="utani gran hur"/>
	<control name="HasteCastMana" value="60"/>
	<control name="HasteCastSpell" value="Utani Hur"/>
	<control name="HasteCastEnable" value="1"/>
	<control name="InvisibleCastMana" value="50"/>
	<control name="InvisibleCastEnable" value="0"/>
	<control name="ShieldCastMana" value="50"/>
	<control name="ShieldCastEnable" value="0"/>
	<control name="RecoveryCastEnable" value="0"/>
	<control name="RecoveryCastType" value="1"/>
	<control name="RecoveryCastMana" value="165"/>
	<control name="RecoveryCheckPzEnable" value="1"/>
</panel>
<panel name="Equipment Manager">
	<control name="AmmoRefillID" value="15793"/>
	<control name="AmmoRefillEnable" value="0"/>
	<control name="WeaponRefillID" value="7368"/>
	<control name="WeaponRefillEnable" value="0"/>
</panel>
<panel name="Targeting">
	<control name="TargetingList">
		<item type="Serpent Spawn" spl="Exori San" rne="3155" chs="0" atk="0" max="10" min="0" prio="7" prox="7" count="1"/>
		<item type="Medusa" spl="Exori San" rne="3155" chs="0" atk="0" max="10" min="0" prio="7" prox="7" count="1"/>
		<item type="Hydra" spl="exori con" rne="3155" chs="0" atk="0" max="10" min="0" prio="7" prox="7" count="1"/>
		<item type="Serpent Spawn" spl="Exori San" rne="3155" chs="7" atk="0" max="100" min="10" prio="6" prox="2" count="2"/>
		<item type="Medusa" spl="Exori San" rne="3155" chs="7" atk="0" max="100" min="10" prio="6" prox="2" count="2"/>
		<item type="Serpent Spawn" spl="Exori San" rne="3155" chs="7" atk="0" max="100" min="10" prio="5" prox="7" count="1"/>
		<item type="Medusa" spl="Exori San" rne="3155" chs="7" atk="0" max="100" min="10" prio="4" prox="7" count="1"/>
		<item type="Hydra" spl="exori con" rne="3155" chs="7" atk="0" max="100" min="10" prio="3" prox="7" count="1"/>
		<item type="Frost Dragon" spl="exori san" rne="3155" chs="7" atk="0" max="100" min="0" prio="2" prox="7" count="1"/>
		<item type="Eternal Guardian" spl="exori san" rne="3155" chs="7" atk="0" max="100" min="0" prio="2" prox="7" count="1"/>
		<item type="Acid Blob" spl="exori flam" rne="3155" chs="0" atk="0" max="100" min="0" prio="1" prox="7" count="1"/>
		<item type="Ice Golem" spl="exori vis" rne="3155" chs="1" atk="0" max="100" min="0" prio="1" prox="7" count="1"/>
		<item type="Giant Spider" spl="exori flam" rne="3155" chs="5" atk="0" max="100" min="0" prio="2" prox="7" count="1"/>
		<item type="Fire Elemental" spl="exori frigo" rne="3155" chs="0" atk="0" max="100" min="0" prio="1" prox="7" count="1"/>
		<item type="Massive Fire Elemental" spl="exori san" rne="3155" chs="0" atk="0" max="100" min="0" prio="3" prox="7" count="1"/>
		<item type="Bat" spl="exori vis" rne="3155" chs="0" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Carniphila" spl="exori flam" rne="3155" chs="0" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Centipede" spl="exori flam" rne="3155" chs="0" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Water Elemental" spl="exori vis" rne="3155" chs="0" atk="0" max="100" min="0" prio="1" prox="7" count="1"/>
		<item type="Earth Elemental" spl="exori flam" rne="3155" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Bug" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Spit Nettle" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Wasp" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Centipede" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Tiger" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Sibang" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Kongra" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Tarantula" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Merlkin" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Carniphila" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Terror Bird" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Wyvern" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Slime" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Crocodile" spl="exori vis" rne="3158" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Elephant" spl="exori flam" rne="3155" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
		<item type="Terrified Elephant" spl="exori flam" rne="3155" chs="1" atk="0" max="100" min="0" prio="10" prox="7" count="1"/>
	</control>
</panel>
<panel name="Walker">
	<control name="WaypointList">
		<item text="start|Trainer:" tag="255"/>
		<item text="Node (32200, 32296, 7)" tag="0"/>
		<item text="Stand (32203, 32299, 7)" tag="1"/>
		<item text="Node (32208, 32297, 6)" tag="0"/>
		<item text="Stand (32209, 32293, 6)" tag="1"/>
		<item text="Self.Step(NORTH)" tag="254"/>
		<item text="start|Temple|+:" tag="255"/>
		<item text="Node (32595, 32748, 7)" tag="0"/>
		<item text="Node (32595, 32756, 7)" tag="0"/>
		<item text="Node (32595, 32762, 7)" tag="0"/>
		<item text="Node (32606, 32762, 7)" tag="0"/>
		<item text="Node (32617, 32762, 7)" tag="0"/>
		<item text="start|Boat|Depot:" tag="255"/>
		<item text="Node (32532, 32778, 6)" tag="0"/>
		<item text="Node (32543, 32778, 6)" tag="0"/>
		<item text="Node (32543, 32787, 6)" tag="0"/>
		<item text="Node (32554, 32787, 6)" tag="0"/>
		<item text="Node (32557, 32778, 6)" tag="0"/>
		<item text="Node (32557, 32771, 6)" tag="0"/>
		<item text="Node (32563, 32767, 6)" tag="0"/>
		<item text="Node (32574, 32768, 6)" tag="0"/>
		<item text="Stand (32578, 32766, 6)" tag="1"/>
		<item text="Node (32579, 32770, 7)" tag="0"/>
		<item text="Node (32589, 32770, 7)" tag="0"/>
		<item text="Node (32597, 32770, 7)" tag="0"/>
		<item text="Node (32598, 32762, 7)" tag="0"/>
		<item text="Node (32607, 32762, 7)" tag="0"/>
		<item text="Node (32617, 32762, 7)" tag="0"/>
		<item text="Node (32617, 32754, 7)" tag="0"/>
		<item text="Node (32621, 32751, 7)" tag="0"/>
		<item text="start|Depot|+:" tag="255"/>
		<item text="Node (32617, 32755, 7)" tag="0"/>
		<item text="start|End:" tag="255"/>
		<item text="startCheck~FromDepot:" tag="255"/>
		<item text="checkDepositGold:" tag="255"/>
		<item text="Node (32622, 32747, 7)" tag="0"/>
		<item text="Stand (32625, 32749, 7)" tag="1"/>
		<item text="Node (32628, 32742, 6)" tag="0"/>
		<item text="preDepositGold:" tag="255"/>
		<item text="Stand (32632, 32740, 6)" tag="1"/>
		<item text="depositGold:" tag="255"/>
		<item text="Node (32625, 32746, 6)" tag="0"/>
		<item text="Stand (32625, 32749, 6)" tag="1"/>
		<item text="skipDepositGold:" tag="255"/>
		<item text="checkDepot:" tag="255"/>
		<item text="Node (32622, 32742, 7)" tag="0"/>
		<item text="depot:" tag="255"/>
		<item text="Node (32622, 32742, 7)" tag="0"/>
		<item text="Node (32622, 32747, 7)" tag="0"/>
		<item text="skipDepot:" tag="255"/>
		<item text="checkStamina:" tag="255"/>
		<item text="Node (32617, 32751, 7)" tag="0"/>
		<item text="Node (32617, 32762, 7)" tag="0"/>
		<item text="Node (32606, 32762, 7)" tag="0"/>
		<item text="Node (32595, 32762, 7)" tag="0"/>
		<item text="Node (32595, 32753, 7)" tag="0"/>
		<item text="Node (32595, 32744, 7)" tag="0"/>
		<item text="trainTeleport:" tag="255"/>
		<item text="Stand (32204, 32299, 6)" tag="1"/>
		<item text="Stand (32201, 32295, 7)" tag="1"/>
		<item text="trainStatue:" tag="255"/>
		<item text="skipStamina:" tag="255"/>
		<item text="checkBankMagicAmmo:" tag="255"/>
		<item text="Stand (32625, 32749, 7)" tag="1"/>
		<item text="Node (32628, 32742, 6)" tag="0"/>
		<item text="checkBankAmmo:" tag="255"/>
		<item text="checkBank:" tag="255"/>
		<item text="preBank:" tag="255"/>
		<item text="Stand (32632, 32740, 6)" tag="1"/>
		<item text="bank:" tag="255"/>
		<item text="Node (32628, 32742, 6)" tag="0"/>
		<item text="checkAmmo:" tag="255"/>
		<item text="preAmmoShop:" tag="255"/>
		<item text="Stand (32632, 32745, 6)" tag="1"/>
		<item text="shopAmmo:" tag="255"/>
		<item text="checkMagic:" tag="255"/>
		<item text="Ladder (32630, 32742, 6)" tag="2"/>
		<item text="preMagic:" tag="255"/>
		<item text="Stand (32624, 32742, 5)" tag="1"/>
		<item text="shopMagic:" tag="255"/>
		<item text="Stand (32626, 32742, 5)" tag="1"/>
		<item text="skipMagic:" tag="255"/>
		<item text="Node (32625, 32746, 6)" tag="0"/>
		<item text="Stand (32625, 32749, 6)" tag="1"/>
		<item text="skipBankMagicAmmo:" tag="255"/>
		<item text="checkSoftbootsAndEdronRunes:" tag="255"/>
		<item text="Node (32621, 32751, 7)" tag="0"/>
		<item text="Node (32617, 32756, 7)" tag="0"/>
		<item text="Node (32617, 32762, 7)" tag="0"/>
		<item text="Node (32608, 32762, 7)" tag="0"/>
		<item text="Node (32598, 32762, 7)" tag="0"/>
		<item text="Node (32597, 32770, 7)" tag="0"/>
		<item text="Node (32588, 32770, 7)" tag="0"/>
		<item text="Node (32580, 32770, 7)" tag="0"/>
		<item text="Node (32578, 32766, 7)" tag="0"/>
		<item text="Ladder (32578, 32766, 7)" tag="2"/>
		<item text="Node (32573, 32768, 6)" tag="0"/>
		<item text="Node (32562, 32767, 6)" tag="0"/>
		<item text="Node (32557, 32773, 6)" tag="0"/>
		<item text="Node (32557, 32783, 6)" tag="0"/>
		<item text="Node (32550, 32787, 6)" tag="0"/>
		<item text="Node (32543, 32787, 6)" tag="0"/>
		<item text="Node (32543, 32792, 6)" tag="0"/>
		<item text="Node (32532, 32792, 6)" tag="0"/>
		<item text="Node (32529, 32784, 6)" tag="0"/>
		<item text="portHopeToVenore:" tag="255"/>
		<item text="checkSoftboots:" tag="255"/>
		<item text="Node (32955, 32024, 6)" tag="0"/>
		<item text="Node (32955, 32033, 6)" tag="0"/>
		<item text="Node (32954, 32042, 6)" tag="0"/>
		<item text="Node (32954, 32051, 6)" tag="0"/>
		<item text="Node (32954, 32060, 6)" tag="0"/>
		<item text="Node (32954, 32069, 6)" tag="0"/>
		<item text="Node (32954, 32082, 6)" tag="0"/>
		<item text="Node (32954, 32091, 6)" tag="0"/>
		<item text="Node (32950, 32096, 6)" tag="0"/>
		<item text="Node (32950, 32104, 6)" tag="0"/>
		<item text="posSoft3:" tag="255"/>
		<item text="Stand (32953, 32108, 6)" tag="1"/>
		<item text="verify|posSoft3:" tag="255"/>
		<item text="shopSoftBoots:" tag="255"/>
		<item text="Node (32950, 32104, 6)" tag="0"/>
		<item text="Node (32950, 32096, 6)" tag="0"/>
		<item text="Node (32954, 32091, 6)" tag="0"/>
		<item text="Node (32954, 32082, 6)" tag="0"/>
		<item text="Node (32954, 32069, 6)" tag="0"/>
		<item text="Node (32954, 32060, 6)" tag="0"/>
		<item text="Node (32954, 32051, 6)" tag="0"/>
		<item text="Node (32954, 32042, 6)" tag="0"/>
		<item text="Node (32955, 32033, 6)" tag="0"/>
		<item text="posSoft4:" tag="255"/>
		<item text="Node (32955, 32024, 6)" tag="0"/>
		<item text="checkEdronRunes:" tag="255"/>
		<item text="venoreToEdron:" tag="255"/>
		<item text="verify|posSoft4|>50:" tag="255"/>
		<item text="Node (33175, 31767, 6)" tag="0"/>
		<item text="Node (33175, 31772, 6)" tag="0"/>
		<item text="Stand (33175, 31775, 6)" tag="1"/>
		<item text="Node (33180, 31775, 7)" tag="0"/>
		<item text="Node (33185, 31777, 7)" tag="0"/>
		<item text="Node (33190, 31779, 7)" tag="0"/>
		<item text="Node (33190, 31783, 7)" tag="0"/>
		<item text="Node (33190, 31787, 7)" tag="0"/>
		<item text="Node (33194, 31791, 7)" tag="0"/>
		<item text="Node (33201, 31791, 7)" tag="0"/>
		<item text="Node (33201, 31796, 7)" tag="0"/>
		<item text="Node (33201, 31801, 7)" tag="0"/>
		<item text="Node (33201, 31806, 7)" tag="0"/>
		<item text="Node (33201, 31811, 7)" tag="0"/>
		<item text="Node (33201, 31816, 7)" tag="0"/>
		<item text="Node (33201, 31820, 7)" tag="0"/>
		<item text="Node (33196, 31820, 7)" tag="0"/>
		<item text="Node (33191, 31820, 7)" tag="0"/>
		<item text="Node (33191, 31826, 7)" tag="0"/>
		<item text="Node (33191, 31832, 7)" tag="0"/>
		<item text="Node (33194, 31837, 7)" tag="0"/>
		<item text="Node (33198, 31843, 7)" tag="0"/>
		<item text="Node (33204, 31843, 7)" tag="0"/>
		<item text="Node (33210, 31843, 7)" tag="0"/>
		<item text="Node (33216, 31843, 7)" tag="0"/>
		<item text="Node (33221, 31840, 7)" tag="0"/>
		<item text="Node (33230, 31840, 7)" tag="0"/>
		<item text="Node (33238, 31841, 7)" tag="0"/>
		<item text="Node (33244, 31841, 7)" tag="0"/>
		<item text="Stand (33247, 31841, 7)" tag="1"/>
		<item text="Node (33254, 31842, 6)" tag="0"/>
		<item text="Stand (33258, 31840, 6)" tag="1"/>
		<item text="Stand (33257, 31842, 5)" tag="1"/>
		<item text="Stand (33255, 31842, 4)" tag="1"/>
		<item text="preEdronRunes:" tag="255"/>
		<item text="Stand (33256, 31841, 3)" tag="1"/>
		<item text="shopEdronRunes:" tag="255"/>
		<item text="Stand (33255, 31842, 3)" tag="1"/>
		<item text="Stand (33257, 31842, 4)" tag="1"/>
		<item text="Stand (33258, 31840, 5)" tag="1"/>
		<item text="Node (33254, 31842, 6)" tag="0"/>
		<item text="Node (33251, 31841, 6)" tag="0"/>
		<item text="Stand (33247, 31841, 6)" tag="1"/>
		<item text="Node (33238, 31841, 7)" tag="0"/>
		<item text="Node (33230, 31840, 7)" tag="0"/>
		<item text="Node (33221, 31840, 7)" tag="0"/>
		<item text="Node (33216, 31843, 7)" tag="0"/>
		<item text="Node (33210, 31843, 7)" tag="0"/>
		<item text="Node (33204, 31843, 7)" tag="0"/>
		<item text="Node (33198, 31843, 7)" tag="0"/>
		<item text="Node (33194, 31837, 7)" tag="0"/>
		<item text="Node (33191, 31832, 7)" tag="0"/>
		<item text="Node (33191, 31826, 7)" tag="0"/>
		<item text="Node (33191, 31820, 7)" tag="0"/>
		<item text="Node (33196, 31820, 7)" tag="0"/>
		<item text="Node (33201, 31820, 7)" tag="0"/>
		<item text="Node (33201, 31816, 7)" tag="0"/>
		<item text="Node (33201, 31811, 7)" tag="0"/>
		<item text="Node (33201, 31806, 7)" tag="0"/>
		<item text="Node (33201, 31801, 7)" tag="0"/>
		<item text="Node (33201, 31796, 7)" tag="0"/>
		<item text="Node (33201, 31791, 7)" tag="0"/>
		<item text="Node (33194, 31791, 7)" tag="0"/>
		<item text="Node (33190, 31787, 7)" tag="0"/>
		<item text="Node (33190, 31783, 7)" tag="0"/>
		<item text="Node (33190, 31779, 7)" tag="0"/>
		<item text="Node (33185, 31777, 7)" tag="0"/>
		<item text="Node (33180, 31775, 7)" tag="0"/>
		<item text="Node (33175, 31775, 7)" tag="0"/>
		<item text="Ladder (33175, 31775, 7)" tag="2"/>
		<item text="Node (33175, 31769, 6)" tag="0"/>
		<item text="posEdronRune1:" tag="255"/>
		<item text="Node (33175, 31764, 6)" tag="0"/>
		<item text="edronToPortHope:" tag="255"/>
		<item text="verify|posEdronRune1|>50:" tag="255"/>
		<item text="enterTown:" tag="255"/>
		<item text="venoreToPortHope:" tag="255"/>
		<item text="verify|posSoft4|>50:" tag="255"/>
		<item text="enterTown:" tag="255"/>
		<item text="hunt|FromDepot:" tag="255"/>
		<item text="Node (32629, 32762, 7)" tag="0"/>
		<item text="route|boatShortcut|noBoatShortcut:" tag="255"/>
		<item text="Node (32629, 32771, 7)" tag="0"/>
		<item text="posCheck1:" tag="255"/>
		<item text="Node (32629, 32772, 7)" tag="0"/>
		<item text="toBanutaEast:" tag="255"/>
		<item text="verify|posCheck1|>15:" tag="255"/>
		<item text="posCheck2:" tag="255"/>
		<item text="Node (32679, 32777, 7)" tag="0"/>
		<item text="toBanuta:" tag="255"/>
		<item text="verify|posCheck2|>30:" tag="255"/>
		<item text="ifstuck|true:" tag="255"/>
		<item text="Node (32826, 32632, 7)" tag="0"/>
		<item text="Node (32820, 32622, 7)" tag="0"/>
		<item text="Node (32829, 32609, 7)" tag="0"/>
		<item text="Node (32843, 32611, 7)" tag="0"/>
		<item text="Node (32848, 32620, 7)" tag="0"/>
		<item text="Node (32855, 32628, 7)" tag="0"/>
		<item text="Node (32852, 32634, 7)" tag="0"/>
		<item text="Node (32852, 32641, 7)" tag="0"/>
		<item text="Node (32850, 32647, 7)" tag="0"/>
		<item text="Node (32848, 32660, 7)" tag="0"/>
		<item text="Node (32853, 32667, 7)" tag="0"/>
		<item text="Walker.Goto('checkPos3')" tag="254"/>
		<item text="noBoatShortcut:" tag="255"/>
		<item text="ifstuck|true:" tag="255"/>
        <item text="Node (32626, 32754, 7)" tag="0"/>
        <item text="Node (32635, 32753, 7)" tag="0"/>
        <item text="Node (32641, 32755, 7)" tag="0"/>
        <item text="Node (32649, 32755, 7)" tag="0"/>
        <item text="Node (32657, 32752, 7)" tag="0"/>
        <item text="Node (32658, 32746, 7)" tag="0"/>
        <item text="Node (32667, 32745, 7)" tag="0"/>
        <item text="Node (32677, 32742, 7)" tag="0"/>
        <item text="Node (32685, 32742, 7)" tag="0"/>
        <item text="Node (32690, 32735, 7)" tag="0"/>
        <item text="Node (32696, 32731, 7)" tag="0"/>
        <item text="Node (32701, 32726, 7)" tag="0"/>
        <item text="Node (32707, 32721, 7)" tag="0"/>
        <item text="Node (32714, 32716, 7)" tag="0"/>
        <item text="Node (32722, 32710, 7)" tag="0"/>
        <item text="Node (32729, 32702, 7)" tag="0"/>
        <item text="Node (32736, 32694, 7)" tag="0"/>
        <item text="Node (32743, 32686, 7)" tag="0"/>
        <item text="Node (32749, 32678, 7)" tag="0"/>
        <item text="Node (32757, 32671, 7)" tag="0"/>
        <item text="Node (32763, 32663, 7)" tag="0"/>
        <item text="Node (32769, 32655, 7)" tag="0"/>
        <item text="Node (32772, 32645, 7)" tag="0"/>
        <item text="Node (32776, 32637, 7)" tag="0"/>   
        <item text="Node (32781, 32628, 7)" tag="0"/>
        <item text="Node (32790, 32624, 7)" tag="0"/>
        <item text="Node (32798, 32620, 7)" tag="0"/>
        <item text="Node (32807, 32612, 7)" tag="0"/>
        <item text="Node (32818, 32609, 7)" tag="0"/>
        <item text="Node (32828, 32608, 7)" tag="0"/>
        <item text="Node (32838, 32608, 7)" tag="0"/>
        <item text="Node (32845, 32612, 7)" tag="0"/>
        <item text="Node (32848, 32618, 7)" tag="0"/>
        <item text="Node (32850, 32625, 7)" tag="0"/>
        <item text="Node (32849, 32633, 7)" tag="0"/>
        <item text="Node (32848, 32642, 7)" tag="0"/>
        <item text="Node (32847, 32652, 7)" tag="0"/>
        <item text="Node (32848, 32663, 7)" tag="0"/>
        <item text="Node (32849, 32669, 7)" tag="0"/>
		<item text="checkPos3:" tag="255"/>
		<item text="Hole (32853, 32669, 7)" tag="4"/>
		<item text="verify|checkPos3|-:" tag="255"/>
		<item text="Stand (32853, 32669, 8)" tag="1"/>
		<item text="checkPos4:" tag="255"/>
		<item text="Stand (32857, 32667, 8)" tag="1"/>
		<item text="Self.Step(EAST)" tag="254"/>
		<item text="verify|checkPos4|-:" tag="255"/>
		<item text="Node (32854, 32667, 9)" tag="0"/>
		<item text="checkPos5:" tag="255"/>
		<item text="Hole (32854, 32666, 9)" tag="4"/>
		<item text="verify|checkPos5|-:" tag="255"/>
		<item text="Node (32860, 32661, 10)" tag="0"/>
		<item text="Node (32885, 32661, 10)" tag="0"/>
		<item text="Node (32891, 32647, 10)" tag="0"/>
		<item text="checkPos6:" tag="255"/>
		<item text="Stand (32891, 32645, 10)" tag="1"/>
		<item text="verify|checkPos6|-:" tag="255"/>
		<item text="checkPos7:" tag="255"/>
		<item text="Stand (32891, 32632, 11)" tag="1"/>
		<item text="Self.Step(WEST)" tag="254"/>
		<item text="Walker.ConditionalGoto((Self.DistanceFromPosition(32886, 32632, 11) > 2), 'checkPos7')" tag="254"/>
		<item text="Node (32883, 32628, 11)" tag="0"/>
		<item text="Node (32867, 32620, 11)" tag="0"/>
		<item text="Node (32849, 32619, 11)" tag="0"/>
		<item text="Node (32834, 32620, 11)" tag="0"/>
		<item text="Node (32814, 32623, 11)" tag="0"/>
		<item text="Node (32809, 32628, 11)" tag="0"/>
		<item text="Node (32808, 32630, 11)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="checkPos8:" tag="255"/>
		<item text="Node (32808, 32630, 11)" tag="0"/>
		<item text="Self.UseItemFromGround(32808, 32631, 11) wait(500) Self.Step(SOUTH) wait(500) Walker.ConditionalGoto((Self.Position().y < 32632), 'checkPos8')" tag="254"/>
		<item text="checkPos9:" tag="255"/>
		<item text="Stand (32806, 32636, 11)" tag="1"/>
		<item text="verify|checkPos9|-:" tag="255"/>
		<item text="continueHunt1:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="Node (32793, 32625, 12)" tag="0"/>
		<item text="Node (32787, 32631, 12)" tag="0"/>
		<item text="Node (32782, 32632, 12)" tag="0"/>
		<item text="Node (32769, 32633, 12)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="Node (32765, 32644, 12)" tag="0"/>
		<item text="Node (32754, 32650, 12)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="Node (32754, 32640, 12)" tag="0"/>
		<item text="Node (32757, 32632, 12)" tag="0"/>
		<item text="wait(1000)" tag="254"/>
		<item text="Node (32754, 32625, 12)" tag="0"/>
		<item text="Node (32754, 32615, 12)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="Node (32766, 32621, 12)" tag="0"/>
		<item text="Node (32770, 32633, 12)" tag="0"/>
		<item text="Node (32781, 32632, 12)" tag="0"/>
		<item text="Node (32791, 32628, 12)" tag="0"/>
		<item text="checkHunt~2:" tag="255"/>
		<item text="Walker.Goto('checkHunt~1'):" tag="255"/>
		<item text="continueHunt2:" tag="255"/>
		<item text="Node (32794, 32617, 12)" tag="0"/>
		<item text="Node (32794, 32606, 12)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="Node (32793, 32593, 12)" tag="0"/>
		<item text="Node (32785, 32587, 12)" tag="0"/>
		<item text="Node (32775, 32588, 12)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="Node (32786, 32587, 12)" tag="0"/>
		<item text="Node (32794, 32596, 12)" tag="0"/>
		<item text="Node (32794, 32607, 12)" tag="0"/>
		<item text="checkHunt~3:" tag="255"/>
		<item text="Walker.Goto('checkHunt~1'):" tag="255"/>
		<item text="continueHunt3:" tag="255"/>
		<item text="Node (32807, 32606, 12)" tag="0"/>
		<item text="Node (32819, 32614, 12)" tag="0"/>
		<item text="Node (32833, 32618, 12)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="route|frost|noFrost:" tag="255"/>
		<item text="Node (32833, 32602, 12)" tag="0"/>
		<item text="Node (32829, 32593, 12)" tag="0"/>
		<item text="Node (32823, 32586, 12)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="Node (32824, 32574, 12)" tag="0"/>
		<item text="Node (32830, 32568, 12)" tag="0"/>
		<item text="route|afterFrost|noAfterFrost:" tag="255"/>
		<item text="Node (32833, 32560, 12)" tag="0"/>
		<item text="Node (32826, 32550, 12)" tag="0"/>
		<item text="Node (32817, 32549, 12)" tag="0"/>
		<item text="Node (32804, 32549, 12)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="Node (32817, 32549, 12)" tag="0"/>
		<item text="Node (32830, 32554, 12)" tag="0"/>
		<item text="Node (32833, 32562, 12)" tag="0"/>
		<item text="noAfterFrost:" tag="255"/>
		<item text="Node (32836, 32568, 12)" tag="0"/>
		<item text="Node (32842, 32574, 12)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="Node (32842, 32586, 12)" tag="0"/>
		<item text="Node (32836, 32592, 12)" tag="0"/>
		<item text="noFrost:" tag="255"/>
		<item text="Node (32833, 32603, 12)" tag="0"/>
		<item text="Node (32833, 32618, 12)" tag="0"/>
		<item text="Node (32821, 32617, 12)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="Node (32816, 32607, 12)" tag="0"/>
		<item text="Node (32807, 32606, 12)" tag="0"/>
		<item text="Node (32795, 32607, 12)" tag="0"/>
		<item text="ifstuck|false:" tag="255"/>
		<item text="wait(1000)" tag="254"/>
		<item text="ifstuck|true|Lure:" tag="255"/>
		<item text="checkHunt~1:" tag="255"/>
		<item text="Node (32803, 32626, 12)" tag="0"/>
		<item text="Node (32804, 32636, 12)" tag="0"/>
		<item text="checkPos10:" tag="255"/>
		<item text="Stand (32805, 32636, 12)" tag="1"/>
		<item text="verify|checkPos10|+:" tag="255"/>
		<item text="Node (32808, 32633, 11)" tag="0"/>
		<item text="checkPos11:" tag="255"/>
		<item text="Self.UseItemFromGround(32808, 32631, 11) wait(500) Self.Step(NORTH) wait(500) Walker.ConditionalGoto((Self.Position().y > 32630), 'checkPos11')" tag="254"/>
		<item text="ifstuck|true:" tag="255"/>
		<item text="Node (32813, 32626, 11)" tag="0"/>
		<item text="Node (32823, 32621, 11)" tag="0"/>
		<item text="Node (32836, 32621, 11)" tag="0"/>
		<item text="Node (32844, 32621, 11)" tag="0"/>
		<item text="Node (32857, 32621, 11)" tag="0"/>
		<item text="Node (32868, 32621, 11)" tag="0"/>
		<item text="Node (32881, 32630, 11)" tag="0"/>
		<item text="checkPos12:" tag="255"/>
		<item text="Stand (32882, 32633, 11)" tag="1"/>
		<item text="Self.Step(EAST) wait(500) Walker.ConditionalGoto((Self.DistanceFromPosition(32839, 32531, 9) > 5), 'checkPos12')" tag="254"/>
		<item text="Node (32809, 32531, 9)" tag="0"/>
		<item text="Node (32810, 32539, 9)" tag="0"/>
		<item text="Node (32820, 32545, 9)" tag="0"/>
		<item text="Node (32806, 32549, 9)" tag="0"/>
		<item text="checkPos13:" tag="255"/>
		<item text="Stand (32802, 32546, 9)" tag="1"/>
		<item text="verify|checkPos13|+:" tag="255"/>
		<item text="Node (32812, 32547, 8)" tag="0"/>
		<item text="Node (32817, 32553, 8)" tag="0"/>
		<item text="Node (32826, 32573, 8)" tag="0"/>
		<item text="checkPos14:" tag="255"/>
		<item text="Stand (32827, 32575, 8)" tag="1"/>
		<item text="verify|checkPos14|+:" tag="255"/>
		<item text="Node (32836, 32576, 7)" tag="0"/>
		<item text="Node (32837, 32584, 7)" tag="0"/>
		<item text="Node (32831, 32588, 7)" tag="0"/>
		<item text="Node (32823, 32594, 7)" tag="0"/>
		<item text="Node (32814, 32604, 7)" tag="0"/>
		<item text="Node (32799, 32620, 7)" tag="0"/>
		<item text="Node (32785, 32638, 7)" tag="0"/>
		<item text="Node (32776, 32654, 7)" tag="0"/>
		<item text="Node (32762, 32678, 7)" tag="0"/>
		<item text="Node (32745, 32701, 7)" tag="0"/>
		<item text="Node (32727, 32719, 7)" tag="0"/>
		<item text="Node (32707, 32730, 7)" tag="0"/>
		<item text="Node (32686, 32742, 7)" tag="0"/>
		<item text="Node (32662, 32746, 7)" tag="0"/>
		<item text="Node (32652, 32753, 7)" tag="0"/>
		<item text="Node (32640, 32755, 7)" tag="0"/>
		<item text="Node (32636, 32752, 7)" tag="0"/>
		<item text="enterTown:" tag="255"/>
	</control>
</panel>
<panel name="Walker Options">
	<control name="ropeOption" value="0"/>
	<control name="shovelOption" value="0"/>
</panel>
<panel name="Looter">
	<control name="LootList" first="0" unlisted="1">
	    <item ID="10426" action="1"/> <!-- piece of marble rock -->
	    <item ID="12311" action="1"/> <!-- carrot on a stick -->
	    <item ID="3386" action="1"/> <!-- dragon scale mail -->
	    <item ID="3392" action="1"/> <!-- royal helmet -->
	    <item ID="3079" action="1"/> <!-- boots of haste -->
	    <item ID="10390" action="1"/> <!-- zaoan sword -->
	    <item ID="8052" action="1"/> <!-- swamplair armor -->
	    <item ID="7402" action="1"/> <!-- dragon slayer -->
	    <item ID="8074" action="1"/> <!-- spellbook of mind control -->
	    <item ID="7386" action="1"/> <!-- mercenary sword -->
	    <item ID="3381" action="1"/> <!-- crown armor -->
	    <item ID="811" action="1"/> <!-- terra mantle -->
	    <item ID="3315" action="1"/> <!-- guardian halberd -->
	    <item ID="812" action="1"/> <!-- terra legs -->
	    <item ID="7456" action="1"/> <!-- noble axe -->
	    <item ID="3436" action="1"/> <!-- medusa shield -->
	    <item ID="3428" action="1"/> <!-- tower shield -->
	    <item ID="3369" action="1"/> <!-- warrior helmet -->
	    <item ID="3370" action="1"/> <!-- knight armor -->
	    <item ID="3371" action="1"/> <!-- knight legs -->
	    <item ID="5879" action="1"/> <!-- spider silk -->
	    <item ID="7413" action="1"/> <!-- titan axe -->
	    <item ID="9302" action="1"/> <!-- sacred tree amulet -->
	    <item ID="828" action="1"/> <!-- lightning headband -->
	    <item ID="3055" action="1"/> <!-- platinum amulet -->
	    <item ID="829" action="1"/> <!-- glacier mask -->
	    <item ID="7290" action="1"/> <!-- shard -->
	    <item ID="5880" action="1"/> <!-- iron ore -->
	    <item ID="814" action="1"/> <!-- terra amulet -->
	    <item ID="3284" action="1"/> <!-- ice rapier -->
	    <item ID="5894" action="1"/> <!-- bat wing -->
	    <item ID="10313" action="1"/> <!-- winged tail -->
	    <item ID="10282" action="1"/> <!-- hydra head -->
	    <item ID="10309" action="1"/> <!-- strand of medusa hair -->
	    <item ID="3081" action="1"/> <!-- stone skin amulet -->
	    <item ID="4839" action="1"/> <!-- hydra egg -->
	    <item ID="10310" action="1"/> <!-- shiny stone -->
	    <item ID="9694" action="1"/> <!-- snake skin -->
	    <item ID="7643" action="1"/> <!-- ultimate health potion -->
	    <item ID="3028" action="1"/> <!-- small diamond -->
	    <item ID="3027" action="1"/> <!-- black pearl -->
	    <item ID="9661" action="1"/> <!-- frosty heart -->
	    <item ID="2903" action="1"/> <!-- golden mug -->
	    <item ID="3032" action="1"/> <!-- small emerald -->
	    <item ID="3029" action="1"/> <!-- small sapphire -->
	    <item ID="9057" action="1"/> <!-- small topaz -->
	    <item ID="9632" action="1"/> <!-- ancient stone -->
	    <item ID="238" action="1"/> <!-- great mana potion -->
	    <item ID="3053" action="1"/> <!-- time ring -->
	    <item ID="3098" action="1"/> <!-- ring of healing -->
	    <item ID="3035" action="1"/> <!-- platinum coin -->
	    <item ID="236" action="1"/> <!-- strong health potion -->
	    <item ID="3061" action="1"/> <!-- life crystal -->
	    <item ID="237" action="1"/> <!-- strong mana potion -->
	    <item ID="3052" action="1"/> <!-- life ring -->
	    <item ID="3031" action="2"/> <!-- gold coin -->
	</control>
</panel>
<panel name="Pathfinder">
	<control name="walkOnFireEnable" value="1"/>
	<control name="walkOnFurnitureEnable" value="1"/>
	<control name="showDiagnoticEnable" value="0"/>
	<control name="walkWithMapclicks" value="0"/>
</panel>
<panel name="Mount">
</panel>
<panel name="Special Areas">
	<control name="AreaList">
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32615" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32795" y="32615" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32794" y="32615" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32793" y="32615" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32792" y="32615" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32791" y="32615" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32784" y="32630" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32784" y="32631" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32784" y="32632" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32784" y="32633" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32784" y="32634" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32784" y="32635" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32785" y="32635" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32783" y="32630" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32783" y="32635" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32772" y="32638" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32771" y="32638" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32770" y="32638" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32769" y="32638" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32768" y="32638" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32767" y="32638" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32766" y="32638" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32765" y="32638" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32762" y="32635" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32762" y="32634" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32762" y="32633" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32762" y="32632" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32762" y="32631" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32762" y="32630" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32765" y="32627" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32766" y="32627" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32767" y="32627" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32768" y="32627" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32769" y="32627" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32770" y="32627" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32771" y="32627" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32772" y="32627" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32771" y="32626" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32766" y="32626" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32771" y="32639" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32803" y="32633" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32804" y="32633" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32805" y="32633" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32806" y="32633" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32807" y="32633" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32807" y="32632" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32616" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32791" y="32616" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32766" y="32639" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32760" y="32646" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32760" y="32647" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32760" y="32648" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32760" y="32649" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32760" y="32650" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32760" y="32651" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32761" y="32651" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32750" y="32643" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32751" y="32643" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32752" y="32643" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32753" y="32643" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32754" y="32643" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32755" y="32643" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32756" y="32643" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32757" y="32643" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32751" y="32642" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32756" y="32642" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32751" y="32638" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32753" y="32634" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32761" y="32634" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32761" y="32631" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32750" y="32622" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32751" y="32622" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32752" y="32622" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32753" y="32622" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32754" y="32622" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32755" y="32622" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32756" y="32622" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32757" y="32622" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32758" y="32621" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32751" y="32623" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32751" y="32627" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32756" y="32623" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32759" y="32613" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32759" y="32614" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32759" y="32615" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32759" y="32616" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32759" y="32617" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32759" y="32618" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32759" y="32619" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32791" y="32599" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32792" y="32599" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32793" y="32599" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32794" y="32599" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32795" y="32599" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32599" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32812" y="32605" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32812" y="32606" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32812" y="32607" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32812" y="32608" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32812" y="32609" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32813" y="32604" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32812" y="32604" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32802" y="32604" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32802" y="32605" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32802" y="32606" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32802" y="32607" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32802" y="32608" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32802" y="32609" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32826" y="32615" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32826" y="32616" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32826" y="32617" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32826" y="32618" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32826" y="32619" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32826" y="32620" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32825" y="32620" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32825" y="32615" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32831" y="32609" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32832" y="32609" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32833" y="32609" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32834" y="32609" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32835" y="32610" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32830" y="32610" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32830" y="32608" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32835" y="32608" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32835" y="32596" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32834" y="32596" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32833" y="32596" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32832" y="32596" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32831" y="32596" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32830" y="32596" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32829" y="32596" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32830" y="32597" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32835" y="32597" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32819" y="32584" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32819" y="32575" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32830" y="32565" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32831" y="32565" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32832" y="32565" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32833" y="32565" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32834" y="32565" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32835" y="32565" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32836" y="32565" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32835" y="32564" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32830" y="32564" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32823" y="32552" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32823" y="32551" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32823" y="32550" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32823" y="32549" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32823" y="32548" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32823" y="32547" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32824" y="32547" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32834" y="32573" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32833" y="32573" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32832" y="32573" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32831" y="32573" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32826" y="32579" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32826" y="32580" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32826" y="32581" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32839" y="32579" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32839" y="32580" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32839" y="32581" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32831" y="32587" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32832" y="32587" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32833" y="32587" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32834" y="32587" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32846" y="32577" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32846" y="32576" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32846" y="32575" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32846" y="32584" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32846" y="32585" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32846" y="32586" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32832" y="32586" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32833" y="32586" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32827" y="32581" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32827" y="32579" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32827" y="32580" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32832" y="32574" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32833" y="32574" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32838" y="32579" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32838" y="32580" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32838" y="32581" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32598" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32791" y="32598" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32783" y="32590" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32783" y="32589" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32783" y="32588" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32783" y="32587" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32783" y="32586" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32783" y="32585" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32784" y="32585" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32784" y="32590" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32782" y="32585" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32782" y="32590" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32765" y="32582" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32764" y="32582" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32763" y="32582" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32762" y="32582" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32761" y="32582" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32760" y="32582" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32761" y="32583" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32807" y="32542" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32811" y="32553" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32811" y="32552" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32811" y="32551" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32811" y="32550" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32811" y="32549" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32811" y="32548" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32811" y="32547" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32811" y="32546" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32812" y="32547" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32812" y="32552" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32822" y="32551" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32822" y="32548" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32547" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32548" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32549" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32550" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32551" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32552" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32795" y="32552" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32795" y="32547" z="12"/>
		<item title="New Area" consider="1" width="1" height="1" x="32819" y="32618" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32819" y="32619" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32819" y="32620" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32819" y="32621" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32819" y="32622" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32797" y="32618" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32797" y="32619" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32797" y="32620" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32797" y="32621" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32797" y="32622" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32622" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32796" y="32618" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32820" y="32618" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32820" y="32622" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32840" y="32637" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32841" y="32637" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32842" y="32637" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32843" y="32637" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32844" y="32637" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32845" y="32637" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32846" y="32637" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32840" y="32604" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32845" y="32604" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32841" y="32603" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32842" y="32603" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32843" y="32603" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32844" y="32603" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32870" y="32617" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32871" y="32617" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32872" y="32617" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32873" y="32617" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32874" y="32617" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32875" y="32617" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32876" y="32617" z="11"/>
		<item title="New Area" consider="1" width="1" height="1" x="32875" y="32618" z="11"/>
		<item title="Special Area #1" consider="3" width="1" height="1" x="32823" y="32575" z="7"/>
		<item title="Special Area #2" consider="3" width="1" height="1" x="32827" y="32578" z="7"/>
		<item title="Special Area #3" consider="3" width="7" height="1" x="32816" y="32577" z="7"/>
		<item title="Special Area #4" consider="3" width="1" height="5" x="32826" y="32566" z="7"/>
		<item title="Special Area #5" consider="3" width="2" height="1" x="32818" y="32588" z="7"/>
		<item title="Special Area #6" consider="3" width="3" height="1" x="32819" y="32587" z="7"/>
		<item title="Special Area #7" consider="3" width="3" height="1" x="32821" y="32586" z="7"/>
		<item title="Special Area #8" consider="3" width="3" height="1" x="32823" y="32585" z="7"/>
		<item title="Special Area #9" consider="3" width="3" height="1" x="32825" y="32584" z="7"/>
		<item title="Special Area #10" consider="3" width="3" height="1" x="32827" y="32583" z="7"/>
		<item title="Special Area #11" consider="3" width="3" height="1" x="32829" y="32582" z="7"/>
		<item title="Special Area #12" consider="3" width="1" height="4" x="32831" y="32578" z="7"/>
		<item title="Special Area #13" consider="3" width="12" height="1" x="32833" y="32594" z="7"/>
		<item title="Special Area #14" consider="3" width="1" height="10" x="32844" y="32584" z="7"/>
		<item title="Special Area #15" consider="3" width="1" height="11" x="32844" y="32572" z="7"/>
		<item title="Special Area #16" consider="3" width="2" height="1" x="32844" y="32583" z="7"/>
		<item title="Special Area #17" consider="3" width="13" height="1" x="32829" y="32566" z="7"/>
		<item title="Special Area #18" consider="3" width="1" height="6" x="32831" y="32595" z="7"/>
	</control>
</panel>
<panel name="Alarms">
	<control name="disAlarm" value="1"/>
	<control name="damAlarm" value="0"/>
	<control name="lhpAlarm" value="1"/>
	<control name="lhpAlarmPercent" value="30"/>
	<control name="pmAlarm" value="1"/>
	<control name="creatureAlarm" value="0"/>
	<control name="attackAlarm" value="0"/>
	<control name="playerAlarm" value="0"/>
	<control name="playerAlarmLog" value="0"/>
	<control name="stuckAlarm" value="0"/>
	<control name="alarmPartyIgnore" value="0"/>
</panel>
<panel name="Scripter">
	<control name="RunningScriptList">
	<script name="[M] Banuta -1.lua"><![CDATA[]]></script>
	<script name="[M] Config-Banuta -1.lua"><![CDATA[]]></script>
	<script name="[M] HUD-Banuta -1.lua"><![CDATA[]]></script>
	<script name="[M] Shooter-Banuta -1.lua"><![CDATA[]]></script>
	</control>
</panel>
<panel name="Advertising">
	<control name="watchSellingWords" value="item, item2"/>
	<control name="watchSellingEnable" value="0"/>
	<control name="watchBuyingWords" value="item, item2"/>
	<control name="watchBuyingEnable" value="0"/>
	<control name="blockLinksEnable" value="0"/>
	<control name="reduceSpamEnable" value="0"/>
</panel>
